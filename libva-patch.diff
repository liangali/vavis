diff --git a/va/va.c b/va/va.c
index 633377b..2fb8a84 100644
--- a/va/va.c
+++ b/va/va.c
@@ -1581,10 +1581,13 @@ VAStatus vaEndPicture (
 
   VA_FOOL_FUNC(va_FoolCheckContinuity, dpy);
 
+  VA_TRACE_ALL(va_TraceEndPicture, dpy, context, 1);
+
   va_status = ctx->vtable->vaEndPicture( ctx, context );
 
   /* dump surface content */
-  VA_TRACE_ALL(va_TraceEndPicture, dpy, context, 1);
+  //VA_TRACE_ALL(va_TraceEndPicture, dpy, context, 1);
+
   VA_TRACE_RET(dpy, va_status);
 
   return va_status;
diff --git a/va/va_trace.c b/va/va_trace.c
index d34fc40..ca4315a 100755
--- a/va/va_trace.c
+++ b/va/va_trace.c
@@ -4916,6 +4916,8 @@ void va_TraceRenderPicture(
     DPY2TRACECTX(dpy, context, VA_INVALID_ID);
 
     TRACE_FUNCNAME(idx);
+
+    return;
     
     va_TraceMsg(trace_ctx, "\tcontext = 0x%08x\n", context);
     va_TraceMsg(trace_ctx, "\tnum_buffers = %d\n", num_buffers);
@@ -5052,6 +5054,8 @@ void va_TraceEndPicture(
     va_TraceMsg(trace_ctx, "\tcontext = 0x%08x\n", context);
     va_TraceMsg(trace_ctx, "\trender_targets = 0x%08x\n", trace_ctx->trace_rendertarget);
 
+    return;
+
     /* avoid to create so many empty files */
     encode = (trace_ctx->trace_entrypoint == VAEntrypointEncSlice);
     decode = (trace_ctx->trace_entrypoint == VAEntrypointVLD);
@@ -5294,7 +5298,7 @@ void va_TracePutSurface (
 void va_TraceStatus(VADisplay dpy, const char * funcName, VAStatus status)
 {
     if(status == VA_STATUS_SUCCESS)
-        return;
+        ;//return;
 
     DPY2TRACE_VIRCTX(dpy);
 
